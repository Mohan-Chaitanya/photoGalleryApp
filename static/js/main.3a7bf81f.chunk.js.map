{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/uploadPhoto.js","hooks/useFireStore.js","components/ImageGrid.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","pic","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","Math","round","UploadPhoto","types","type","onChange","e","upLoaded","target","files","includes","console","log","id","for","stroke","fill","stroke-width","viewBox","height","width","xmlns","fill-rule","d","clip-rule","useFireStore","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","ImageGrid","setSelectedImg","map","onClick","src","alt","Modal","seletedImg","classList","contains","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a7bf81f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div className='title'>\r\n            <h1>GreenGram!!!</h1>\r\n            <h2>Greeeeen Pics</h2>\r\n            <p>Misssing these now a days?</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAKAsXVXX4HXHOD3649tQREA5HBGtN9dyk\",\r\n    authDomain: \"react-photogallery-5fec1.firebaseapp.com\",\r\n    projectId: \"react-photogallery-5fec1\",\r\n    storageBucket: \"react-photogallery-5fec1.appspot.com\",\r\n    messagingSenderId: \"28540600360\",\r\n    appId: \"1:28540600360:web:493e142f883312dc3a751d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp();\r\n\r\nexport { projectFirestore, projectStorage, timeStamp }","import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore, timeStamp } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state_change', (pic) => {\r\n            const percentage = (pic.bytesTransferred / pic.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            setUrl(url);\r\n            const createdAt = timeStamp;\r\n            collectionRef.add({ url, createdAt })\r\n        });\r\n    }, [file])\r\n\r\n    return { progress, error, url }\r\n\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n    const { url, progress } = useStorage(file);\r\n\r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null);\r\n        }\r\n    }, [url])\r\n\r\n    return (\r\n        <div>{Math.round(progress)}%</div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React, { useState } from \"react\"\r\nimport ProgressBar from \"./ProgressBar\";\r\n\r\nconst UploadPhoto = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const types = ['image/jpeg', 'image/png'];\r\n\r\n    const changeHandler = (e) => {\r\n        let upLoaded = e.target.files[0];\r\n        if (upLoaded && types.includes(upLoaded.type)) {\r\n            setError('');\r\n            setFile(upLoaded);\r\n            console.log(upLoaded);\r\n        } else {\r\n            setFile(null);\r\n            setError('Select an image file type like JPEG/PNG')\r\n        }\r\n    }\r\n    return (\r\n        <form className='fileUpload'>\r\n            <input type='file' onChange={changeHandler} id='fileInput' />\r\n\r\n            <label for='fileInput' id=\"uploadBtn\"><svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 16 16\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M.5 8a.5.5 0 01.5.5V12a1 1 0 001 1h12a1 1 0 001-1V8.5a.5.5 0 011 0V12a2 2 0 01-2 2H2a2 2 0 01-2-2V8.5A.5.5 0 01.5 8zM5 4.854a.5.5 0 00.707 0L8 2.56l2.293 2.293A.5.5 0 1011 4.146L8.354 1.5a.5.5 0 00-.708 0L5 4.146a.5.5 0 000 .708z\" clip-rule=\"evenodd\"></path><path fill-rule=\"evenodd\" d=\"M8 2a.5.5 0 01.5.5v8a.5.5 0 01-1 0v-8A.5.5 0 018 2z\" clip-rule=\"evenodd\"></path></svg>UploadFile</label>\r\n            <div className='output'>\r\n                {error && <div className='error'>{error}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile} />}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadPhoto;","import { useState, useEffect } from 'react'\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\nconst useFireStore = (collection) => {\r\n    const [docs, setDocs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const unsub = projectFirestore.collection(collection)\r\n            .orderBy('createdAt', 'desc')\r\n            .onSnapshot((snap) => {\r\n                let documents = [];\r\n                snap.forEach(doc => {\r\n                    documents.push({ ...doc.data(), id: doc.id })\r\n                })\r\n                setDocs(documents);\r\n            })\r\n\r\n        return () => unsub();\r\n\r\n    }, [collection])\r\n    return { docs }\r\n}\r\n\r\nexport default useFireStore;","import React from 'react'\r\nimport useFireStore from '../hooks/useFireStore'\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n\r\n    const { docs } = useFireStore('images');\r\n    console.log(docs);\r\n\r\n    return (\r\n        <div className='img-grid'>\r\n            {docs && docs.map(doc => (\r\n                <div className='img-wrap' key={doc.id} onClick={() => {\r\n                    setSelectedImg(doc.url)\r\n                }} >\r\n                    <img src={doc.url} alt='' />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react'\r\n\r\nconst Modal = ({ seletedImg, setSelectedImg }) => {\r\n\r\n    const HandleClick = (e) => {\r\n        if (e.target.classList.contains('backDrop')) {\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='backDrop' onClick={HandleClick}>\r\n            <img src={seletedImg} alt=\"bigPic\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react'\nimport './App.css';\nimport Title from \"./components/Title\"\nimport UploadPhoto from \"./components/uploadPhoto\"\nimport ImageGrid from './components/ImageGrid'\nimport Modal from './components/Modal'\n\nfunction App() {\n\n  const [seletedImg, setSelectedImg] = useState(null)\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadPhoto />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {seletedImg && <Modal seletedImg={seletedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}